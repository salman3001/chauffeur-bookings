import { MigrationInterface, QueryRunner } from "typeorm";

export class Init1720507040084 implements MigrationInterface {
    name = 'Init1720507040084'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "admin_profile" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "userId" integer, CONSTRAINT "REL_1a272d44c2214c1e8b22a886d6" UNIQUE ("userId"))`);
        await queryRunner.query(`CREATE TABLE "car" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar NOT NULL, "make" varchar NOT NULL, "year" integer NOT NULL, "image" json, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "ownerId" integer)`);
        await queryRunner.query(`CREATE TABLE "availability" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "sunday" boolean NOT NULL, "sundayFullDay" boolean NOT NULL, "sundayFrom" time, "sundayTo" time, "monday" boolean NOT NULL, "mondayFullDay" boolean NOT NULL, "mondayFrom" time, "mondayTo" time, "tuesday" boolean NOT NULL, "tuesdayFullDay" boolean NOT NULL, "tuesdayFrom" time, "tuesdayTo" time, "wednesday" boolean NOT NULL, "wednesdayFullDay" boolean NOT NULL, "wednesdayFrom" time, "wednesdayTo" time, "thursday" boolean NOT NULL, "thursdayFullDay" boolean NOT NULL, "thursdayFrom" time, "thursdayTo" time, "friday" boolean NOT NULL, "fridayFullDay" boolean NOT NULL, "fridayFrom" time, "fridayTo" time, "saturday" boolean NOT NULL, "saturdayFullDay" boolean NOT NULL, "saturdayFrom" time, "saturdayTo" time, "chauffeurProfileId" integer, CONSTRAINT "REL_96b2e01426676a76c41ef0522b" UNIQUE ("chauffeurProfileId"))`);
        await queryRunner.query(`CREATE TABLE "chauffeur_profile" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "pricePerHour" decimal(10,2), "carId" integer, "userId" integer, CONSTRAINT "REL_cf59a553b40394f74a17ebdd5f" UNIQUE ("carId"), CONSTRAINT "REL_2ab246e58babda38b61a2db4e3" UNIQUE ("userId"))`);
        await queryRunner.query(`CREATE TABLE "booked_slot" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "dateTimeFrom" datetime NOT NULL, "dateTimeTo" datetime NOT NULL, "bookingId" integer, "chauffeurProfileId" integer, CONSTRAINT "REL_42bf977651f54c8bbf0e7551cc" UNIQUE ("bookingId"))`);
        await queryRunner.query(`CREATE TABLE "payment" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "cretaedAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')))`);
        await queryRunner.query(`CREATE TABLE "booking" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "pickupAddress" varchar NOT NULL, "pickupCords" json NOT NULL, "dropoffAddress" varchar NOT NULL, "dropoffCords" json NOT NULL, "bookedForHours" integer NOT NULL, "pricePerHour" decimal(10,2) NOT NULL, "total" decimal(10,2) NOT NULL, "status" text NOT NULL, "paymentMode" text, "history" json NOT NULL, "cretaedAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "paymentId" integer, "customerProfileId" integer, "chauffeurProfileId" integer, CONSTRAINT "REL_14223cf3883f8f74019bf60ded" UNIQUE ("paymentId"))`);
        await queryRunner.query(`CREATE TABLE "profile" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "avatar" json, "userId" integer, CONSTRAINT "REL_a24972ebd73b106250713dcddd" UNIQUE ("userId"))`);
        await queryRunner.query(`CREATE TABLE "notification" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "data" json NOT NULL, "readAt" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "userId" integer)`);
        await queryRunner.query(`CREATE TABLE "user" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "firstName" varchar(50) NOT NULL, "lastName" varchar(50) NOT NULL, "email" varchar(50) NOT NULL, "password" varchar(256) NOT NULL, "phone" varchar(15), "userType" text NOT NULL, "isActive" boolean NOT NULL DEFAULT (0), "emailVerified" boolean NOT NULL DEFAULT (0), "cretaedAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "deletedAt" datetime, CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"))`);
        await queryRunner.query(`CREATE TABLE "temporary_admin_profile" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "userId" integer, CONSTRAINT "REL_1a272d44c2214c1e8b22a886d6" UNIQUE ("userId"), CONSTRAINT "FK_1a272d44c2214c1e8b22a886d61" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_admin_profile"("id", "userId") SELECT "id", "userId" FROM "admin_profile"`);
        await queryRunner.query(`DROP TABLE "admin_profile"`);
        await queryRunner.query(`ALTER TABLE "temporary_admin_profile" RENAME TO "admin_profile"`);
        await queryRunner.query(`CREATE TABLE "temporary_car" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar NOT NULL, "make" varchar NOT NULL, "year" integer NOT NULL, "image" json, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "ownerId" integer, CONSTRAINT "FK_cce467b67e5d4a0012473f985ea" FOREIGN KEY ("ownerId") REFERENCES "admin_profile" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_car"("id", "name", "make", "year", "image", "createdAt", "updatedAt", "ownerId") SELECT "id", "name", "make", "year", "image", "createdAt", "updatedAt", "ownerId" FROM "car"`);
        await queryRunner.query(`DROP TABLE "car"`);
        await queryRunner.query(`ALTER TABLE "temporary_car" RENAME TO "car"`);
        await queryRunner.query(`CREATE TABLE "temporary_availability" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "sunday" boolean NOT NULL, "sundayFullDay" boolean NOT NULL, "sundayFrom" time, "sundayTo" time, "monday" boolean NOT NULL, "mondayFullDay" boolean NOT NULL, "mondayFrom" time, "mondayTo" time, "tuesday" boolean NOT NULL, "tuesdayFullDay" boolean NOT NULL, "tuesdayFrom" time, "tuesdayTo" time, "wednesday" boolean NOT NULL, "wednesdayFullDay" boolean NOT NULL, "wednesdayFrom" time, "wednesdayTo" time, "thursday" boolean NOT NULL, "thursdayFullDay" boolean NOT NULL, "thursdayFrom" time, "thursdayTo" time, "friday" boolean NOT NULL, "fridayFullDay" boolean NOT NULL, "fridayFrom" time, "fridayTo" time, "saturday" boolean NOT NULL, "saturdayFullDay" boolean NOT NULL, "saturdayFrom" time, "saturdayTo" time, "chauffeurProfileId" integer, CONSTRAINT "REL_96b2e01426676a76c41ef0522b" UNIQUE ("chauffeurProfileId"), CONSTRAINT "FK_96b2e01426676a76c41ef0522b7" FOREIGN KEY ("chauffeurProfileId") REFERENCES "chauffeur_profile" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_availability"("id", "sunday", "sundayFullDay", "sundayFrom", "sundayTo", "monday", "mondayFullDay", "mondayFrom", "mondayTo", "tuesday", "tuesdayFullDay", "tuesdayFrom", "tuesdayTo", "wednesday", "wednesdayFullDay", "wednesdayFrom", "wednesdayTo", "thursday", "thursdayFullDay", "thursdayFrom", "thursdayTo", "friday", "fridayFullDay", "fridayFrom", "fridayTo", "saturday", "saturdayFullDay", "saturdayFrom", "saturdayTo", "chauffeurProfileId") SELECT "id", "sunday", "sundayFullDay", "sundayFrom", "sundayTo", "monday", "mondayFullDay", "mondayFrom", "mondayTo", "tuesday", "tuesdayFullDay", "tuesdayFrom", "tuesdayTo", "wednesday", "wednesdayFullDay", "wednesdayFrom", "wednesdayTo", "thursday", "thursdayFullDay", "thursdayFrom", "thursdayTo", "friday", "fridayFullDay", "fridayFrom", "fridayTo", "saturday", "saturdayFullDay", "saturdayFrom", "saturdayTo", "chauffeurProfileId" FROM "availability"`);
        await queryRunner.query(`DROP TABLE "availability"`);
        await queryRunner.query(`ALTER TABLE "temporary_availability" RENAME TO "availability"`);
        await queryRunner.query(`CREATE TABLE "temporary_chauffeur_profile" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "pricePerHour" decimal(10,2), "carId" integer, "userId" integer, CONSTRAINT "REL_cf59a553b40394f74a17ebdd5f" UNIQUE ("carId"), CONSTRAINT "REL_2ab246e58babda38b61a2db4e3" UNIQUE ("userId"), CONSTRAINT "FK_cf59a553b40394f74a17ebdd5f4" FOREIGN KEY ("carId") REFERENCES "car" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_2ab246e58babda38b61a2db4e34" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_chauffeur_profile"("id", "pricePerHour", "carId", "userId") SELECT "id", "pricePerHour", "carId", "userId" FROM "chauffeur_profile"`);
        await queryRunner.query(`DROP TABLE "chauffeur_profile"`);
        await queryRunner.query(`ALTER TABLE "temporary_chauffeur_profile" RENAME TO "chauffeur_profile"`);
        await queryRunner.query(`CREATE TABLE "temporary_booked_slot" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "dateTimeFrom" datetime NOT NULL, "dateTimeTo" datetime NOT NULL, "bookingId" integer, "chauffeurProfileId" integer, CONSTRAINT "REL_42bf977651f54c8bbf0e7551cc" UNIQUE ("bookingId"), CONSTRAINT "FK_42bf977651f54c8bbf0e7551cc0" FOREIGN KEY ("bookingId") REFERENCES "booking" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_a93d2f2372b44e472ad899785df" FOREIGN KEY ("chauffeurProfileId") REFERENCES "chauffeur_profile" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_booked_slot"("id", "dateTimeFrom", "dateTimeTo", "bookingId", "chauffeurProfileId") SELECT "id", "dateTimeFrom", "dateTimeTo", "bookingId", "chauffeurProfileId" FROM "booked_slot"`);
        await queryRunner.query(`DROP TABLE "booked_slot"`);
        await queryRunner.query(`ALTER TABLE "temporary_booked_slot" RENAME TO "booked_slot"`);
        await queryRunner.query(`CREATE TABLE "temporary_booking" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "pickupAddress" varchar NOT NULL, "pickupCords" json NOT NULL, "dropoffAddress" varchar NOT NULL, "dropoffCords" json NOT NULL, "bookedForHours" integer NOT NULL, "pricePerHour" decimal(10,2) NOT NULL, "total" decimal(10,2) NOT NULL, "status" text NOT NULL, "paymentMode" text, "history" json NOT NULL, "cretaedAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "paymentId" integer, "customerProfileId" integer, "chauffeurProfileId" integer, CONSTRAINT "REL_14223cf3883f8f74019bf60ded" UNIQUE ("paymentId"), CONSTRAINT "FK_14223cf3883f8f74019bf60ded5" FOREIGN KEY ("paymentId") REFERENCES "payment" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_8c9e8ef7097d13aa1a005aa8a64" FOREIGN KEY ("customerProfileId") REFERENCES "profile" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_297fe28c8a370e0b55e0a161f40" FOREIGN KEY ("chauffeurProfileId") REFERENCES "chauffeur_profile" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_booking"("id", "pickupAddress", "pickupCords", "dropoffAddress", "dropoffCords", "bookedForHours", "pricePerHour", "total", "status", "paymentMode", "history", "cretaedAt", "updatedAt", "paymentId", "customerProfileId", "chauffeurProfileId") SELECT "id", "pickupAddress", "pickupCords", "dropoffAddress", "dropoffCords", "bookedForHours", "pricePerHour", "total", "status", "paymentMode", "history", "cretaedAt", "updatedAt", "paymentId", "customerProfileId", "chauffeurProfileId" FROM "booking"`);
        await queryRunner.query(`DROP TABLE "booking"`);
        await queryRunner.query(`ALTER TABLE "temporary_booking" RENAME TO "booking"`);
        await queryRunner.query(`CREATE TABLE "temporary_profile" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "avatar" json, "userId" integer, CONSTRAINT "REL_a24972ebd73b106250713dcddd" UNIQUE ("userId"), CONSTRAINT "FK_a24972ebd73b106250713dcddd9" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_profile"("id", "avatar", "userId") SELECT "id", "avatar", "userId" FROM "profile"`);
        await queryRunner.query(`DROP TABLE "profile"`);
        await queryRunner.query(`ALTER TABLE "temporary_profile" RENAME TO "profile"`);
        await queryRunner.query(`CREATE TABLE "temporary_notification" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "data" json NOT NULL, "readAt" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "userId" integer, CONSTRAINT "FK_1ced25315eb974b73391fb1c81b" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_notification"("id", "data", "readAt", "createdAt", "updatedAt", "userId") SELECT "id", "data", "readAt", "createdAt", "updatedAt", "userId" FROM "notification"`);
        await queryRunner.query(`DROP TABLE "notification"`);
        await queryRunner.query(`ALTER TABLE "temporary_notification" RENAME TO "notification"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "notification" RENAME TO "temporary_notification"`);
        await queryRunner.query(`CREATE TABLE "notification" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "data" json NOT NULL, "readAt" text, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "userId" integer)`);
        await queryRunner.query(`INSERT INTO "notification"("id", "data", "readAt", "createdAt", "updatedAt", "userId") SELECT "id", "data", "readAt", "createdAt", "updatedAt", "userId" FROM "temporary_notification"`);
        await queryRunner.query(`DROP TABLE "temporary_notification"`);
        await queryRunner.query(`ALTER TABLE "profile" RENAME TO "temporary_profile"`);
        await queryRunner.query(`CREATE TABLE "profile" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "avatar" json, "userId" integer, CONSTRAINT "REL_a24972ebd73b106250713dcddd" UNIQUE ("userId"))`);
        await queryRunner.query(`INSERT INTO "profile"("id", "avatar", "userId") SELECT "id", "avatar", "userId" FROM "temporary_profile"`);
        await queryRunner.query(`DROP TABLE "temporary_profile"`);
        await queryRunner.query(`ALTER TABLE "booking" RENAME TO "temporary_booking"`);
        await queryRunner.query(`CREATE TABLE "booking" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "pickupAddress" varchar NOT NULL, "pickupCords" json NOT NULL, "dropoffAddress" varchar NOT NULL, "dropoffCords" json NOT NULL, "bookedForHours" integer NOT NULL, "pricePerHour" decimal(10,2) NOT NULL, "total" decimal(10,2) NOT NULL, "status" text NOT NULL, "paymentMode" text, "history" json NOT NULL, "cretaedAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "paymentId" integer, "customerProfileId" integer, "chauffeurProfileId" integer, CONSTRAINT "REL_14223cf3883f8f74019bf60ded" UNIQUE ("paymentId"))`);
        await queryRunner.query(`INSERT INTO "booking"("id", "pickupAddress", "pickupCords", "dropoffAddress", "dropoffCords", "bookedForHours", "pricePerHour", "total", "status", "paymentMode", "history", "cretaedAt", "updatedAt", "paymentId", "customerProfileId", "chauffeurProfileId") SELECT "id", "pickupAddress", "pickupCords", "dropoffAddress", "dropoffCords", "bookedForHours", "pricePerHour", "total", "status", "paymentMode", "history", "cretaedAt", "updatedAt", "paymentId", "customerProfileId", "chauffeurProfileId" FROM "temporary_booking"`);
        await queryRunner.query(`DROP TABLE "temporary_booking"`);
        await queryRunner.query(`ALTER TABLE "booked_slot" RENAME TO "temporary_booked_slot"`);
        await queryRunner.query(`CREATE TABLE "booked_slot" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "dateTimeFrom" datetime NOT NULL, "dateTimeTo" datetime NOT NULL, "bookingId" integer, "chauffeurProfileId" integer, CONSTRAINT "REL_42bf977651f54c8bbf0e7551cc" UNIQUE ("bookingId"))`);
        await queryRunner.query(`INSERT INTO "booked_slot"("id", "dateTimeFrom", "dateTimeTo", "bookingId", "chauffeurProfileId") SELECT "id", "dateTimeFrom", "dateTimeTo", "bookingId", "chauffeurProfileId" FROM "temporary_booked_slot"`);
        await queryRunner.query(`DROP TABLE "temporary_booked_slot"`);
        await queryRunner.query(`ALTER TABLE "chauffeur_profile" RENAME TO "temporary_chauffeur_profile"`);
        await queryRunner.query(`CREATE TABLE "chauffeur_profile" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "pricePerHour" decimal(10,2), "carId" integer, "userId" integer, CONSTRAINT "REL_cf59a553b40394f74a17ebdd5f" UNIQUE ("carId"), CONSTRAINT "REL_2ab246e58babda38b61a2db4e3" UNIQUE ("userId"))`);
        await queryRunner.query(`INSERT INTO "chauffeur_profile"("id", "pricePerHour", "carId", "userId") SELECT "id", "pricePerHour", "carId", "userId" FROM "temporary_chauffeur_profile"`);
        await queryRunner.query(`DROP TABLE "temporary_chauffeur_profile"`);
        await queryRunner.query(`ALTER TABLE "availability" RENAME TO "temporary_availability"`);
        await queryRunner.query(`CREATE TABLE "availability" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "sunday" boolean NOT NULL, "sundayFullDay" boolean NOT NULL, "sundayFrom" time, "sundayTo" time, "monday" boolean NOT NULL, "mondayFullDay" boolean NOT NULL, "mondayFrom" time, "mondayTo" time, "tuesday" boolean NOT NULL, "tuesdayFullDay" boolean NOT NULL, "tuesdayFrom" time, "tuesdayTo" time, "wednesday" boolean NOT NULL, "wednesdayFullDay" boolean NOT NULL, "wednesdayFrom" time, "wednesdayTo" time, "thursday" boolean NOT NULL, "thursdayFullDay" boolean NOT NULL, "thursdayFrom" time, "thursdayTo" time, "friday" boolean NOT NULL, "fridayFullDay" boolean NOT NULL, "fridayFrom" time, "fridayTo" time, "saturday" boolean NOT NULL, "saturdayFullDay" boolean NOT NULL, "saturdayFrom" time, "saturdayTo" time, "chauffeurProfileId" integer, CONSTRAINT "REL_96b2e01426676a76c41ef0522b" UNIQUE ("chauffeurProfileId"))`);
        await queryRunner.query(`INSERT INTO "availability"("id", "sunday", "sundayFullDay", "sundayFrom", "sundayTo", "monday", "mondayFullDay", "mondayFrom", "mondayTo", "tuesday", "tuesdayFullDay", "tuesdayFrom", "tuesdayTo", "wednesday", "wednesdayFullDay", "wednesdayFrom", "wednesdayTo", "thursday", "thursdayFullDay", "thursdayFrom", "thursdayTo", "friday", "fridayFullDay", "fridayFrom", "fridayTo", "saturday", "saturdayFullDay", "saturdayFrom", "saturdayTo", "chauffeurProfileId") SELECT "id", "sunday", "sundayFullDay", "sundayFrom", "sundayTo", "monday", "mondayFullDay", "mondayFrom", "mondayTo", "tuesday", "tuesdayFullDay", "tuesdayFrom", "tuesdayTo", "wednesday", "wednesdayFullDay", "wednesdayFrom", "wednesdayTo", "thursday", "thursdayFullDay", "thursdayFrom", "thursdayTo", "friday", "fridayFullDay", "fridayFrom", "fridayTo", "saturday", "saturdayFullDay", "saturdayFrom", "saturdayTo", "chauffeurProfileId" FROM "temporary_availability"`);
        await queryRunner.query(`DROP TABLE "temporary_availability"`);
        await queryRunner.query(`ALTER TABLE "car" RENAME TO "temporary_car"`);
        await queryRunner.query(`CREATE TABLE "car" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar NOT NULL, "make" varchar NOT NULL, "year" integer NOT NULL, "image" json, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "ownerId" integer)`);
        await queryRunner.query(`INSERT INTO "car"("id", "name", "make", "year", "image", "createdAt", "updatedAt", "ownerId") SELECT "id", "name", "make", "year", "image", "createdAt", "updatedAt", "ownerId" FROM "temporary_car"`);
        await queryRunner.query(`DROP TABLE "temporary_car"`);
        await queryRunner.query(`ALTER TABLE "admin_profile" RENAME TO "temporary_admin_profile"`);
        await queryRunner.query(`CREATE TABLE "admin_profile" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "userId" integer, CONSTRAINT "REL_1a272d44c2214c1e8b22a886d6" UNIQUE ("userId"))`);
        await queryRunner.query(`INSERT INTO "admin_profile"("id", "userId") SELECT "id", "userId" FROM "temporary_admin_profile"`);
        await queryRunner.query(`DROP TABLE "temporary_admin_profile"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TABLE "notification"`);
        await queryRunner.query(`DROP TABLE "profile"`);
        await queryRunner.query(`DROP TABLE "booking"`);
        await queryRunner.query(`DROP TABLE "payment"`);
        await queryRunner.query(`DROP TABLE "booked_slot"`);
        await queryRunner.query(`DROP TABLE "chauffeur_profile"`);
        await queryRunner.query(`DROP TABLE "availability"`);
        await queryRunner.query(`DROP TABLE "car"`);
        await queryRunner.query(`DROP TABLE "admin_profile"`);
    }

}
